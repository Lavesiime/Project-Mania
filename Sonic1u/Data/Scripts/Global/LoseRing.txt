// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: Lose Ring Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0  : object.timer
private alias object.value1  : object.targetPlayer

private alias 0 : LOSERING_TYPE_HIGH
private alias 1 : LOSERING_TYPE_LOW

// Player aliases
private alias object.state  : player.state
private alias object.value0 : player.rings

// Game Mode Aliases
private alias 2 : MODE_TIMEATTACK

// Music Events
private alias 25 : SLOT_MUSICEVENT_CHANGE

private alias 2 : MUSICEVENT_TRANSITION

// Achievement Aliases
private alias 4 : ACHIEVEMENT_RINGKING

// Path ID Aliases
private alias 0 : PATH_A


// ========================
// Events
// ========================

event ObjectUpdate
	if object.state == 0
		object.yvel += 0x1800
		object.xpos += object.xvel
		object.ypos += object.yvel

		if options.moveset > 1 // Tie the Mania ring collision to the moveset setting I guess
			if object.xvel >= 0
				if object.value30 == 0
					ObjectTileCollision(CSIDE_LWALL, 8, 0, PATH_A)
				else
					ObjectTileCollision(CSIDE_LWALL, 16, 0, PATH_A)
				end if
				if checkResult == true
					FlipSign(object.xvel)
				end if
			else
				if object.value30 == 0
					ObjectTileCollision(CSIDE_RWALL, -8, 0, PATH_A)
				else
					ObjectTileCollision(CSIDE_RWALL, -16, 0, PATH_A)
				end if
				if checkResult == true
					FlipSign(object.xvel)
				end if
			end if
			
			if object.yvel >= 0
				if object.value30 == 0
					ObjectTileCollision(CSIDE_FLOOR, 0, 8, PATH_A)
				else
					ObjectTileCollision(CSIDE_FLOOR, 0, 16, PATH_A)
				end if
				if checkResult == true
					temp0 = object.yvel
					temp0 >>= 2
					object.yvel -= temp0
					FlipSign(object.yvel)
					if object.yvel > -0x10000
						object.yvel = -0x10000
					end if
				end if
			else
				if object.value30 == 0
					ObjectTileCollision(CSIDE_ROOF, 0, -8, PATH_A)
				else
					ObjectTileCollision(CSIDE_ROOF, 0, -16, PATH_A)
				end if
				if checkResult == true
					temp0 = object.yvel
					temp0 >>= 2
					object.yvel -= temp0
					if object.yvel < 0x10000
						object.yvel = 0x10000
					end if
				end if
			end if
		else
			if object.yvel >= 0
				if object.value30 == 0
					ObjectTileCollision(CSIDE_FLOOR, 0, 8, PATH_A)
				else
					ObjectTileCollision(CSIDE_FLOOR, 0, 16, PATH_A)
				end if
				if checkResult == true
					temp0 = object.yvel
					temp0 >>= 2
					object.yvel -= temp0
					FlipSign(object.yvel)
					if object.yvel > -0x10000
						object.yvel = -0x10000
					end if
				end if
			end if
		end if

		object.timer++
		if object.timer == 256
			object.type = TypeName[Blank Object]
			object.xvel = 0
			object.yvel = 0
			object.timer = 0
		else
			object.animationTimer += object.animationSpeed
			object.animationTimer += object.animationSpeed
			if object.animationTimer >= 0x100
				object.animationTimer -= 0x100
				object.frame++
				if object.frame == 16
					object.frame = 0
					if object.animationSpeed > 16
						if object.value30 == 0
							object.animationSpeed -= 16
						end if
					end if
				end if
			end if

			if object.timer >= 240
				object.alpha -= 16
			end if
		end if

		if object.timer >= 64
			foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
				CheckEqual(player[currentPlayer].state, Player_State_Hurt)
				temp0 = checkResult
				CheckEqual(player[currentPlayer].state, Player_State_GotHit)
				temp0 |= checkResult
				if temp0 == false
					if object.value30 == 0
						BoxCollisionTest(C_TOUCH, object.entityPos, -8, -8, 8, 8, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
					else
						BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
					end if
					if checkResult == true
						object.type = TypeName[Ring Sparkle]
						if object.propertyValue == LOSERING_TYPE_HIGH
							object.drawOrder = 4
						else
							object.drawOrder = 2
						end if
						object.xvel = 0
						object.yvel = 0
						object.timer = 0
						object.targetPlayer = 0
						object.timer = 0
						object.frame = 0
						if object.value30 != 0
							player[0].rings += object.value30
						else
							player[0].rings++
						endif
						if player[0].rings > 999
							// What the...?
							// this is meant to be "player[0].rings" right...? we dont need to set this obj's value0 to 999...
							player.rings = 999
						end if

						if player[0].rings >= ringExtraLife
							if options.gameMode != MODE_TIMEATTACK
	#platform: USE_ORIGINS
								if game.coinMode == false
									player.lives++
								else
									CallNativeFunction2(NotifyCallback, NOTIFY_ADD_COIN, 1)
								end if
	#endplatform
	#platform: USE_STANDALONE
								player.lives++
	#endplatform
								PlaySfx(SfxName[Life], false)
								PauseMusic()
								ResetObjectEntity(SLOT_MUSICEVENT_CHANGE, TypeName[Music Event], MUSICEVENT_TRANSITION, 0, 0)
								object[SLOT_MUSICEVENT_CHANGE].priority = PRIORITY_ACTIVE
								
								ringExtraLife += 100
								if ringExtraLife > 300
									ringExtraLife = 1000
								end if
							end if

							if stage.debugMode == false
								if player[0].rings >= 200
									// Grant the "Ring King" Achievement
									CallNativeFunction2(SetAchievement, ACHIEVEMENT_RINGKING, 100)
								end if
							end if
						end if

						if ringPan == 0
							PlaySfx(SfxName[Ring L], false)
							SetSfxAttributes(SfxName[Ring L], -1, -100)
							ringPan = 1
						else
							PlaySfx(SfxName[Ring R], false)
							SetSfxAttributes(SfxName[Ring R], -1, 100)
							ringPan = 0
						end if
					end if
				end if
			next
		end if
	else
		object.xpos += object.xvel
		object.ypos += object.yvel
		if object.outOfBounds == true
			object.type = TypeName[Blank Object]
		end if
		object.animationTimer += object.animationSpeed
		object.scale += 30
		if object.animationTimer >= 0x100
			object.animationTimer -= 0x100
			object.frame++
			if object.frame == 16
				object.frame = 0
				if object.animationSpeed > 16
					if object.value30 == 0
						object.animationSpeed -= 16
					end if
				end if
			end if
		end if
	end if
	
	if object.value30 > 0
		temp0 = object.timer
		temp0 %= 32
		if temp0 == 0
			CreateTempObject(TypeName[Ring Sparkle], 2, object.xpos, object.ypos)
			if object.propertyValue == LOSERING_TYPE_HIGH
				object[tempObjectPos].drawOrder = 4
			else
				object[tempObjectPos].drawOrder = 2
			end if
		end if
	end if
	
end event


event ObjectDraw
	temp0 = object.frame
	if object.value30 != 0
		temp0 += 16
	endif
	temp1 = FX_INK
	if object.state == 1
		temp1 = FX_SCALE
	end if
	DrawSpriteFX(temp0, temp1, object.xpos, object.ypos)
end event


event ObjectStartup
	LoadSpriteSheet("Global/Items.gif")

	// Ring Frames, they're the same as the standard Ring object sprites
	SpriteFrame(-8, -8, 16, 16, 1, 265)
	SpriteFrame(-8, -8, 16, 16, 18, 265)
	SpriteFrame(-8, -8, 16, 16, 35, 265)
	SpriteFrame(-8, -8, 16, 16, 52, 265)
	SpriteFrame(-8, -8, 16, 16, 69, 265)
	SpriteFrame(-8, -8, 16, 16, 86, 265)
	SpriteFrame(-8, -8, 16, 16, 103, 265)
	SpriteFrame(-8, -8, 16, 16, 120, 265)
	SpriteFrame(-8, -8, 16, 16, 137, 265)
	SpriteFrame(-8, -8, 16, 16, 154, 265)
	SpriteFrame(-8, -8, 16, 16, 171, 265)
	SpriteFrame(-8, -8, 16, 16, 188, 265)
	SpriteFrame(-8, -8, 16, 16, 205, 265)
	SpriteFrame(-8, -8, 16, 16, 222, 265)
	SpriteFrame(-8, -8, 16, 16, 239, 265)
	SpriteFrame(-8, -8, 16, 16, 256, 265)
	
	SpriteFrame(-16, -16, 32, 32, 1, 282)
	SpriteFrame(-16, -16, 32, 32, 34, 282)
	SpriteFrame(-16, -16, 32, 32, 67, 282)
	SpriteFrame(-16, -16, 32, 32, 100, 282)
	SpriteFrame(-16, -16, 32, 32, 133, 282)
	SpriteFrame(-16, -16, 32, 32, 166, 282)
	SpriteFrame(-16, -16, 32, 32, 199, 282)
	SpriteFrame(-16, -16, 32, 32, 232, 282)
	SpriteFrame(-16, -16, 32, 32, 265, 282)
	SpriteFrame(-16, -16, 32, 32, 298, 282)
	SpriteFrame(-16, -16, 32, 32, 331, 282)
	SpriteFrame(-16, -16, 32, 32, 364, 282)
	SpriteFrame(-16, -16, 32, 32, 397, 282)
	SpriteFrame(-16, -16, 32, 32, 430, 282)
	SpriteFrame(-16, -16, 32, 32, 463, 282)
	SpriteFrame(-16, -16, 32, 32, 1, 315)
end event

// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Items.gif")
	SpriteFrame(-8, -8, 16, 16, 1, 1)
	
	// Although used by the object, it shouldn't be set here
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
