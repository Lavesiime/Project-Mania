// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: SLZ Setup Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.paletteTimer
private alias object.value1 : object.paletteIndex
private alias object.value2 : object.scrollPos
private alias object.value3 : object.signTileFrame
private alias object.value4 : object.cylinder1TileFrame
private alias object.value5 : object.starTilesFrameA
private alias object.value6 : object.starTilesTimerA
private alias object.value7 : object.starTilesFrameB
private alias object.value8 : object.starTilesTimerB
private alias object.value9 : object.starTilesFrameC
private alias object.value10 : object.starTilesTimerC
private alias object.value11 : object.starTilesFrameD
private alias object.value12 : object.starTilesTimerD
private alias object.value13 : object.timer

// Tracks
private alias 0 : TRACK_STAGE
private alias 2 : TRACK_INVINCIBLE
private alias 4 : TRACK_BOSS

// Reserved object slots
private alias 10 : SLOT_ZONESETUP
private alias 25 : SLOT_MUSICEVENT_CHANGE

// Music Events
private alias 0 : MUSICEVENT_FADETOBOSS
private alias 1 : MUSICEVENT_FADETOSTAGE
private alias 2 : MUSICEVENT_TRANSITION

private alias 0 : MUSICEVENT_FLAG_NOCHANGE
private alias 1 : MUSICEVENT_FLAG_SPEEDUP
private alias 2 : MUSICEVENT_FLAG_SLOWDOWN

// Music Loops
private alias 84364 : MUSIC_LOOP_SLZ
private alias 67640 : MUSIC_LOOP_SLZ_F

private alias 39528 : MUSIC_LOOP_INV
private alias 30436 : MUSIC_LOOP_INV_F


// ========================
// Function Declarations
// ========================

reserve function SLZSetup_SpeedUpMusic
reserve function SLZSetup_SlowDownMusic


// ========================
// Static Values
// ========================

public value SLZSetup_rotateTimer = 0


// ========================
// Tables
// ========================

private table SLZSetup_palTable1
	0x00E0E0, 0x00A0A0, 0x006060, 0x002020, 0x006060, 0x00A0A0
end table

private table SLZSetup_palTable2
	0x600000, 0xA00000, 0xE00000, 0xA00000, 0x600000, 0x200000
end table

private table SLZSetup_palTable3
	0x606000, 0x202000, 0x606000, 0xA0A000, 0xE0E000, 0xA0A000
end table

private table SLZSetup_palTable4
	0x380800, 0x780000, 0xBC0000, 0x780000, 0x380800, 0x100000
end table

private table SLZSetup_palTable5
	0x940000, 0xBC0000, 0xF44000, 0xBC0000, 0x940000, 0x380800
end table

private table SLZSetup_palTable6
	0xC80000, 0xF01800, 0xF86C00, 0xF01800, 0xC80000, 0x600000
end table

private table SLZSetup_palTable7
	0xD46A00, 0xF86C00, 0xFCB400, 0xF86C00, 0xD46A00, 0x940000
end table

private table SLZSetup_palTable8
	0xD8A400, 0xE0D400, 0xE0E080, 0xE0D400, 0xD8A400, 0xD46400
end table

private table SLZSetup_palTable9
	0x00A4A4, 0x007878, 0x004040, 0x001010, 0x004040, 0x007878
end table

private table SLZSetup_palTable10
	0x00E0E0, 0x00C0C0, 0x009090, 0x006060, 0x009090, 0x00C0C0
end table

private table SLZSetup_palTable11
	0x00E8E8, 0x00E0E0, 0x00A4A4, 0x009090, 0x00A4A4, 0x00E0E0
end table

private table SLZSetup_palTable12
	0x80E8E8, 0x00E8E8, 0x00C0C0, 0x00A4A4, 0x00C0C0, 0x00E8E8
end table

private table SLZSetup_palTable13
	0xB4E8E8, 0x80E8E8, 0x00E8E8, 0x00C0C0, 0x00E8E8, 0x80E8E8
end table

private table SLZSetup_palTable14
	0x484800, 0x101000, 0x484800, 0x78780C, 0xC0C000, 0x78780C
end table

private table SLZSetup_palTable15
	0x78780C, 0x484800, 0x78780C, 0xB4B440, 0xF0F040, 0xB4B440
end table

private table SLZSetup_palTable16
	0x909018, 0x606000, 0x909018, 0xC4C448, 0xFCFC40, 0xC4C448
end table

private table SLZSetup_palTable17
	0xA4A430, 0x78780C, 0xA4A430, 0xD4D448, 0xFCFCA4, 0xD4D448
end table

private table SLZSetup_palTable18
	0xB4B440, 0xA4A430, 0xB4B440, 0xE0E048, 0xFCFCC8, 0xE0E048
end table

private table SLZSetup_replay_credits_STK
	0xBB00000, 0x4C0000
	0x00, 37
	0x08, 36
	0x00, 6
	0x08, 204
	0x02, 39
	0x00, 159
	0x04, 37
	0x34, 1
	0x24, 7
	0x04, 47
	0x34, 1
	0x24, 33
end table


// ========================
// Function Definitions
// ========================

private function SLZSetup_SpeedUpMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, MUSICEVENT_TRANSITION)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == 0
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F)
			SwapMusicTrack("Starlight_F.ogg", TRACK_STAGE, MUSIC_LOOP_SLZ_F, 8000)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("Starlight_F.ogg", TRACK_STAGE, MUSIC_LOOP_SLZ_F)
			SwapMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F, 8000)
			break

		case TRACK_BOSS
			SetMusicTrack("Starlight_F.ogg", TRACK_STAGE, MUSIC_LOOP_SLZ_F)
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F)
			break
			
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SPEEDUP
	end if
end function


private function SLZSetup_SlowDownMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, MUSICEVENT_TRANSITION)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult

	if temp0 == false
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV)
			SwapMusicTrack("Starlight.ogg", TRACK_STAGE, MUSIC_LOOP_SLZ, 12500)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("Starlight.ogg", TRACK_STAGE, MUSIC_LOOP_SLZ)
			SwapMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV, 12500)
			break

		case TRACK_BOSS
			SetMusicTrack("Starlight.ogg", TRACK_STAGE, MUSIC_LOOP_SLZ)
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV)
			break
			
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SLOWDOWN
	end if
end function


// ========================
// Events
// ========================

event ObjectUpdate
	GetTableValue(temp0, 21, StageSetup_oscillationTable)
	if temp0 == 0
		SLZSetup_rotateTimer++
		SLZSetup_rotateTimer &= 3
	end if

	object.paletteTimer++
	if object.paletteTimer == 8
		object.paletteTimer = 0
		object.paletteIndex++
		object.paletteIndex %= 6

		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable1)
		SetPaletteEntry(0, 171, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable2)
		SetPaletteEntry(0, 173, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable3)
		SetPaletteEntry(0, 174, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable4)
		SetPaletteEntry(0, 234, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable5)
		SetPaletteEntry(0, 235, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable6)
		SetPaletteEntry(0, 236, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable7)
		SetPaletteEntry(0, 237, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable8)
		SetPaletteEntry(0, 238, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable9)
		SetPaletteEntry(0, 239, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable10)
		SetPaletteEntry(0, 240, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable11)
		SetPaletteEntry(0, 241, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable12)
		SetPaletteEntry(0, 242, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable13)
		SetPaletteEntry(0, 243, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable14)
		SetPaletteEntry(0, 244, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable15)
		SetPaletteEntry(0, 245, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable16)
		SetPaletteEntry(0, 246, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable17)
		SetPaletteEntry(0, 247, temp0)
		GetTableValue(temp0, object.paletteIndex, SLZSetup_palTable18)
		SetPaletteEntry(0, 248, temp0)
	end if

	// FG Signs
	temp0 = object.signTileFrame
	temp0 >>= 4
	temp0 <<= 2
	temp0 <<= 1
	temp0 += 486
	Copy16x16Tile(477, temp0)
	temp0++
	Copy16x16Tile(478, temp0)
	temp0++
	Copy16x16Tile(479, temp0)
	temp0++
	Copy16x16Tile(480, temp0)
	temp0++
	Copy16x16Tile(481, temp0)
	temp0++
	Copy16x16Tile(482, temp0)
	temp0++
	Copy16x16Tile(483, temp0)
	temp0++
	Copy16x16Tile(484, temp0)
	temp0++
	object.signTileFrame++
	object.signTileFrame %= 0x30

	// Cylinder Animations (Interactable)
	Copy16x16Tile(817, object.cylinder1TileFrame)
	object.cylinder1TileFrame++

	Copy16x16Tile(818, object.cylinder1TileFrame)
	object.cylinder1TileFrame++

	Copy16x16Tile(819, object.cylinder1TileFrame)
	object.cylinder1TileFrame++

	Copy16x16Tile(820, object.cylinder1TileFrame)
	object.cylinder1TileFrame++

	Copy16x16Tile(821, object.cylinder1TileFrame)
	object.cylinder1TileFrame++

	Copy16x16Tile(822, object.cylinder1TileFrame)
	object.cylinder1TileFrame++

	Copy16x16Tile(823, object.cylinder1TileFrame)
	object.cylinder1TileFrame++

	Copy16x16Tile(824, object.cylinder1TileFrame)
	object.cylinder1TileFrame++

	if object.cylinder1TileFrame > 888
		object.cylinder1TileFrame = 825
	end if

	// Star Animations
	temp2 = object.starTilesTimerA
	temp2 >>= 3
	temp2 <<= 1
	temp2 += 967
	temp3 = object.starTilesTimerB
	temp3 >>= 3
	temp3 <<= 1
	temp3 += 967
	temp4 = object.starTilesTimerC
	temp4 >>= 3
	temp4 <<= 1
	temp4 += 971
	temp5 = object.starTilesTimerD
	temp5 >>= 3
	temp5 <<= 1
	temp5 += 971
	Copy16x16Tile(963, temp2)
	temp2++
	Copy16x16Tile(964, temp3)
	temp3++
	Copy16x16Tile(965, temp4)
	temp4++
	Copy16x16Tile(966, temp5)
	temp4++
	object.timer++
	if object.timer > 56
		object.starTilesTimerA += 1
		if object.starTilesTimerA == 31
			object.starTilesTimerA = 0
		end if
		object.starTilesTimerC += 1
		if object.starTilesTimerC == 31
			object.starTilesTimerC = 0
		end if
		if object.timer > 86
			object.timer = 0
		end if
	end if
	if object.timer > 56
		object.starTilesTimerB += 1
		if object.starTilesTimerB == 31
			object.starTilesTimerB = 1
		end if
		object.starTilesTimerD += 1
		if object.starTilesTimerD == 31
			object.starTilesTimerD = 1
		end if
	end if
end event


event ObjectDraw
	// Draw FG Construction Sprites
	// (Even if Forever allows for wider screen sizes, it doesn't actually update this code for that, which is why the giders just appear and disappear)
	temp0 = screen.xoffset
	temp0 <<= 1
	temp0 &= 511
	FlipSign(temp0)

	temp0 += object.scrollPos
	temp1 = screen.yoffset
	temp1 <<= 1
	temp1 &= 255
	FlipSign(temp1)
	DrawSpriteScreenXY(0, temp0, temp1)
	DrawSpriteScreenXY(1, temp0, temp1)
end event


event ObjectStartup

	if options.encoreGraphics == true
		LoadPalette("SLZEncore.act", 0, 0, 0, 256)
	end if

	LoadSpriteSheet("SLZ/Objects.gif")
	
	SetMusicTrack("Starlight.ogg", TRACK_STAGE, MUSIC_LOOP_SLZ)
	SpeedUpMusic = SLZSetup_SpeedUpMusic
	SlowDownMusic = SLZSetup_SlowDownMusic
	
	// Sprite Frames
	// (Foreground pole)
	SpriteFrame(-16, 0, 32, 256, 224, 0)
	SpriteFrame(-16, 256, 32, 256, 224, 0)

	// Flicky and Picky are the ones living in these stars
	animalType1 = TypeName[Flicky]
	animalType2 = TypeName[Picky]

	object[SLOT_ZONESETUP].type = TypeName[SLZ Setup]
	object[SLOT_ZONESETUP].priority = PRIORITY_ACTIVE
	object[SLOT_ZONESETUP].drawOrder = 5
	object[SLOT_ZONESETUP].scrollPos = 496

	// Init aniTiles
	Copy16x16Tile(963, 967)
	Copy16x16Tile(964, 968)
	Copy16x16Tile(965, 969)
	Copy16x16Tile(966, 970)

	
	temp0 = screen.xcenter
	temp0 >>= 2
	object[SLOT_ZONESETUP].scrollPos -= temp0
	SLZSetup_rotateTimer = 0

	if options.attractMode == true
		Player_attractTable = SLZSetup_replay_credits_STK
		Player_attractTableSize = 26
		Player_attractDuration = 540
		CallFunction(Player_SetupAttractDemo)
	end if
end event


// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
