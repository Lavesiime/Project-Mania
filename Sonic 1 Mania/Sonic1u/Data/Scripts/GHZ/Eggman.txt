// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: GHZ Eggman Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Using GHZEggman as a prefix here because there's like 6 "Eggman" objects in the game so its less confusing this way

// ========================
// Aliases
// ========================

private alias object.value0 : object.timer
private alias object.value1 : object.health
private alias object.value2 : object.arenaBorder
private alias object.value3 : object.oscillatePos
private alias object.value4 : object.originY
private alias object.value5 : object.arenaOffset
private alias object.value6 : object.ballPos
private alias object.value7 : object.lightPos
private alias object.value8 : object.eggmanFrame
private alias object.value9 : object.mobileAnimTimer
private alias object.value10 : object.flameFrame

// object[-1] (WreckingBall) aliases, this object is structured like a v3 one so these are all used here instead of in WreckingBall
private alias object.value1 : object.initialMoveVel
private alias object.value2 : object.moveVelocity
private alias object.value3 : object.arenaSize
private alias object.value4 : object.invincibilityTimer
private alias object.value5 : object.gravityStrength
private alias object.value6 : object.flameAnim
private alias object.value7 : object.flameAnimTimer

// Player Aliases
private alias object.value40 : player.hitboxLeft
private alias object.value38 : player.hitboxTop
private alias object.value41 : player.hitboxRight
private alias object.value39 : player.hitboxBottom

// Eggman States
private alias 0  : GHZEGGMAN_AWAITPLAYER
private alias 1  : GHZEGGMAN_ENTEREGGMAN
private alias 2  : GHZEGGMAN_MOVEINTOPLACE
private alias 3  : GHZEGGMAN_LOWERBALL
private alias 4  : GHZEGGMAN_INITIALSWING
private alias 5  : GHZEGGMAN_MOVERIGHT
private alias 6  : GHZEGGMAN_MOVELEFT
private alias 7  : GHZEGGMAN_EXPLODE
private alias 8  : GHZEGGMAN_DEFEATFALL
private alias 9  : GHZEGGMAN_DEFEATRISE
private alias 10 : GHZEGGMAN_FLEE
private alias 11 : GHZEGGMAN_ESCAPE

// Wrecking Ball States
private alias 0 : WRECKINGBALL_INACTIVE
private alias 1 : WRECKINGBALL_ACTIVE
private alias 2 : WRECKINGBALL_EXPLODE

// Eggman Animations
private alias 0 : GHZEGGANI_INVISIBLE
private alias 1 : GHZEGGANI_IDLE
private alias 2 : GHZEGGANI_LAUGH
private alias 3 : GHZEGGANI_HIT
private alias 4 : GHZEGGANI_DEFEATED
private alias 5 : GHZEGGANI_TOASTED
private alias 6 : GHZEGGANI_PANIC

// Flame Animations
private alias 0 : FLAME_INACTIVE
private alias 1 : FLAME_ACTIVE
private alias 2 : FLAME_EXPLODE

// Player Aliases
private alias object.xpos : player.xpos
private alias object.xvel : player.xvel
private alias object.speed: player.speed
private alias object.animation : player.animation
private alias object.collisionRight : player.collisionRight

// Music Events
private alias 26 : SLOT_MUSICEVENT_BOSS

private alias 0 : MUSICEVENT_FADETOBOSS
private alias 1 : MUSICEVENT_FADETOSTAGE
private alias 2 : MUSICEVENT_TRANSITION


// ========================
// Function Declarations
// ========================

reserve function GHZEggman_Oscillate
reserve function GHZEggman_FlyAway
reserve function GHZEggman_SwingBall


// ========================
// Function Definitions
// ========================

private function GHZEggman_Oscillate
	object.rotation += 2
	object.rotation &= 511
	temp0 = object.rotation
	temp0 <<= 1
	temp0 += 128
	Sin(object.ypos, temp0)
	object.ypos <<= 9
	object.ypos += object.originY
end function


private function GHZEggman_FlyAway
	object.rotation += 4
	object.rotation &= 511
	Sin(object.ypos, object.rotation)
	object.ypos <<= 9
	object.ypos += object.oscillatePos
end function


private function GHZEggman_SwingBall
	// Lights
	object[-6].xpos = object.xpos
	object[-6].ypos = object.ypos
	object[-6].ypos += 0x1C0000
	Sin(temp1, object.rotation)
	temp1 >>= 2
	temp1 += 128
	
	// Chain 1
	temp0 = 16
	Cos(object[-5].xpos, temp1)
	object[-5].xpos *= temp0
	object[-5].xpos <<= 7
	object[-5].xpos += object[-6].xpos
	Sin(object[-5].ypos, temp1)
	object[-5].ypos *= temp0
	object[-5].ypos <<= 7
	object[-5].ypos += object[-6].ypos

	// Chain 2
	temp0 += 16
	Cos(object[-4].xpos, temp1)
	object[-4].xpos *= temp0
	object[-4].xpos <<= 7
	object[-4].xpos += object[-6].xpos
	Sin(object[-4].ypos, temp1)
	object[-4].ypos *= temp0
	object[-4].ypos <<= 7
	object[-4].ypos += object[-6].ypos

	// Chain 3
	temp0 += 16
	Cos(object[-3].xpos, temp1)
	object[-3].xpos *= temp0
	object[-3].xpos <<= 7
	object[-3].xpos += object[-6].xpos
	Sin(object[-3].ypos, temp1)
	object[-3].ypos *= temp0
	object[-3].ypos <<= 7
	object[-3].ypos += object[-6].ypos

	// Chain 4
	temp0 += 16
	Cos(object[-2].xpos, temp1)
	object[-2].xpos *= temp0
	object[-2].xpos <<= 7
	object[-2].xpos += object[-6].xpos
	Sin(object[-2].ypos, temp1)
	object[-2].ypos *= temp0
	object[-2].ypos <<= 7
	object[-2].ypos += object[-6].ypos

	// Ball
	temp0 += 32
	Cos(object[-1].xpos, temp1)
	object[-1].xpos *= temp0
	object[-1].xpos <<= 7
	object[-1].xpos += object[-6].xpos
	Sin(object[-1].ypos, temp1)
	object[-1].ypos *= temp0
	object[-1].ypos <<= 7
	object[-1].ypos += object[-6].ypos
	object[-1].rotation = temp1

	if object.rotation >= 0x100
		object.direction = FACING_RIGHT
	else
		object.direction = FACING_LEFT
	end if
end function


// ========================
// Events
// ========================

event ObjectUpdate
	switch object.state
	case GHZEGGMAN_AWAITPLAYER
		temp0 = object[-1].ixpos
		temp0 -= screen.xcenter
		stage.newXBoundary1 = temp0

		temp0 = object[-1].ixpos
		temp0 += screen.xcenter
		stage.newXBoundary2 = temp0

		temp0 = object.iypos
		temp0 += 64
		if screen.yoffset > temp0
			if object[0].xpos > object[-1].xpos
				object.animation = GHZEGGANI_IDLE
#platform: USE_ORIGINS
				if game.bossOneLife == false
					object.health = 8
				else
					object.health = 1
				end if
#endplatform
#platform: USE_STANDALONE
				object.health = 8
#endplatform
				ResetObjectEntity(SLOT_MUSICEVENT_BOSS, TypeName[Music Event], MUSICEVENT_FADETOBOSS, 0, 0)
				object[SLOT_MUSICEVENT_BOSS].priority = PRIORITY_ACTIVE
				object.state++
			end if
		end if
		break

	case GHZEGGMAN_ENTEREGGMAN
		object.ypos += 0x10000
		if object.ypos >= object.oscillatePos
			object.ypos = object.oscillatePos
			object.timer = 96
			object[-1].flameAnim = FLAME_ACTIVE
			object.state++
		end if
		break

	case GHZEGGMAN_MOVEINTOPLACE
		if object.timer > 0
			object.timer--
			object.xpos = object.timer
			object.xpos <<= 16
			object.xpos += object[-1].xpos
			temp0 = object.timer
			temp0 <<= 7
			temp0 /= 96
			Cos(object.ypos, temp0)
			object.ypos *= -0xB00
			object.ypos += object.oscillatePos
		else
			object.xpos = object[-1].xpos
			object.arenaBorder = object[-1].xpos
			object.ypos = object.originY
			object.originY -= 0x40000
			object.state++
			object[-1].type = TypeName[Wrecking Ball]
			object[-1].ypos = object.ypos
			object[-6].type = TypeName[Boss Lights]
			object[-6].ypos = object.ypos
			object.animation = GHZEGGANI_LAUGH
			object[-1].flameAnim = FLAME_INACTIVE
		end if
		break

	case GHZEGGMAN_LOWERBALL
		if object.ballPos < 0x7C0000
			CallFunction(GHZEggman_Oscillate)
			
			object.ballPos += 0x10000
			if object.lightPos < 0x1C0000
				object.lightPos += 0x8000
			end if

			if object.ballPos > 0x2C0000
				object[-5].type = TypeName[Boss Chain]
			end if

			if object.ballPos > 0x3C0000
				object[-4].type = TypeName[Boss Chain]
			end if
			
			if object.ballPos > 0x4C0000
				object[-3].type = TypeName[Boss Chain]
			end if

			if object.ballPos > 0x5C0000
				object[-2].type = TypeName[Boss Chain]
			end if

			// Ball
			object[-1].ypos = object.ypos
			object[-1].ypos += object.ballPos

			// Lights
			object[-6].ypos = object.ypos
			object[-6].ypos += object.lightPos

			// Chain 1
			object[-5].ypos = object[-6].ypos
			object[-5].ypos += 0x100000

			// Chain 2
			object[-4].ypos = object[-5].ypos
			object[-4].ypos += 0x100000

			// Chain 3
			object[-3].ypos = object[-4].ypos
			object[-3].ypos += 0x100000

			// Chain 4
			object[-2].ypos = object[-3].ypos
			object[-2].ypos += 0x100000

			object.animationTimer %= 10
		else
			object.rotation = 256
			CallFunction(GHZEggman_Oscillate)
			CallFunction(GHZEggman_SwingBall)
			object[-1].initialMoveVel = object.arenaOffset
			object[-1].initialMoveVel >>= 2
			object[-1].moveVelocity = object.arenaOffset
			object[-1].arenaSize = object.arenaOffset
			object[-1].arenaSize *= 64
			temp0 = object[-1].arenaSize
			temp0 >>= 1
			object.arenaBorder -= temp0
			object.state++
			object.animation = GHZEGGANI_IDLE
			object[-1].flameAnim = FLAME_ACTIVE
			object[-1].state = WRECKINGBALL_ACTIVE
		end if
		break

	case GHZEGGMAN_INITIALSWING
		CallFunction(GHZEggman_Oscillate)
		CallFunction(GHZEggman_SwingBall)
		if object.xpos > object.arenaBorder
			object.xpos -= object[-1].initialMoveVel
			if object.xpos < object.arenaBorder
				object.xpos = object.arenaBorder
			end if
		else
			object[-1].flameAnim = FLAME_INACTIVE
			object.arenaBorder += object[-1].arenaSize
			object.state++
		end if
		break

	case GHZEGGMAN_MOVERIGHT
		CallFunction(GHZEggman_Oscillate)
		CallFunction(GHZEggman_SwingBall)
		if object.xpos < object.arenaBorder
			if object.rotation >= 128
				object[-1].flameAnim = FLAME_ACTIVE
				object.xpos += object[-1].moveVelocity
				if object.xpos > object.arenaBorder
					object.xpos = object.arenaBorder
				end if
			end if
		else
			object[-1].flameAnim = FLAME_INACTIVE
			object.arenaBorder -= object[-1].arenaSize
			object.state++
		end if
		break

	case GHZEGGMAN_MOVELEFT
		CallFunction(GHZEggman_Oscillate)
		CallFunction(GHZEggman_SwingBall)
		if object.xpos > object.arenaBorder
			if object.rotation >= 384
				object[-1].flameAnim = FLAME_ACTIVE
				object.xpos -= object[-1].moveVelocity
				if object.xpos < object.arenaBorder
					object.xpos = object.arenaBorder
				end if
			end if
		else
			object[-1].flameAnim = FLAME_INACTIVE
			object.arenaBorder += object[-1].arenaSize
			object.state--
		end if
		break

	case GHZEGGMAN_EXPLODE
		object.timer++
		temp0 = object.timer
		temp0 &= 7
		if temp0 == 4
			Rand(temp0, 96)
			temp0 -= 48
			temp0 <<= 16
			temp0 += object.xpos
			Rand(temp1, 48)
			temp1 -= 24
			temp1 <<= 16
			temp1 += object.ypos
			CreateTempObject(TypeName[Explosion], 0, temp0, temp1)
			object[tempObjectPos].drawOrder = 4
			PlaySfx(SfxName[Explosion], false)
		end if

		if object.timer == 180
			object.animation = GHZEGGANI_TOASTED
			object.animationTimer = 0
			object.timer = 0
			object.direction = FACING_LEFT
			ResetObjectEntity(SLOT_MUSICEVENT_BOSS, TypeName[Music Event], MUSICEVENT_FADETOSTAGE, 0, 0)
			object[SLOT_MUSICEVENT_BOSS].priority = PRIORITY_ACTIVE
			object.state++
		end if
		break

	case GHZEGGMAN_DEFEATFALL
		object.ypos += object[-1].gravityStrength
		object[-1].gravityStrength += 0x1800
		
		object.timer++
		if object.timer == 38
			object[-1].gravityStrength = 0
			object.timer = 0
			object.animationTimer = 0
			object.state++
		end if
		break

	case GHZEGGMAN_DEFEATRISE
		if object.timer < 48
			object.ypos += object[-1].gravityStrength
			object[-1].gravityStrength -= 0x800
			object.timer++
		else
			object.timer = 0
			object[-1].gravityStrength = 0
			object.rotation = 0
			object.oscillatePos = object.ypos
			object.state++
		end if
		break

	case GHZEGGMAN_FLEE
		CallFunction(GHZEggman_FlyAway)

		if object.timer < 8
			object.timer++
		else
			object.timer = 0
			object.animation = GHZEGGANI_PANIC
			object.animationTimer = 0
			object[-1].flameAnim = FLAME_EXPLODE
			object[-1].flameAnimTimer = 0
			object.priority = PRIORITY_ACTIVE
			temp0 = tileLayer[0].xsize
			temp0 <<= 7
			stage.newXBoundary2 = temp0
			object.state++
		end if
		break

	case GHZEGGMAN_ESCAPE
		CallFunction(GHZEggman_FlyAway)
		object.xpos += 0x40000
		object.oscillatePos -= 0x4000
		if object.outOfBounds == true
			object.type = TypeName[Blank Object]
			object.priority = PRIORITY_BOUNDS
		end if
		break

	end switch

	if object[-1].invincibilityTimer > 0
		object[-1].invincibilityTimer--
	end if

	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		if object[-1].invincibilityTimer == 0

			CheckEqual(player[currentPlayer].animation, ANI_HURT)
			temp0 = checkResult
			CheckEqual(player[currentPlayer].animation, ANI_DYING)
			temp0 |= checkResult
			CheckEqual(player[currentPlayer].animation, ANI_DROWNING)
			temp0 |= checkResult
			if temp0 != 0
				if object.animation != GHZEGGANI_LAUGH
					object.animation = GHZEGGANI_LAUGH
					object.animationTimer = 0
				end if
			end if

			switch object.state
			default
				break
				
			case GHZEGGMAN_INITIALSWING
			case GHZEGGMAN_MOVERIGHT
			case GHZEGGMAN_MOVELEFT
				BoxCollisionTest(C_TOUCH, object.entityPos, -20, -16, 20, 16, currentPlayer, player[currentPlayer].hitboxLeft, player[currentPlayer].hitboxTop, player[currentPlayer].hitboxRight, player[currentPlayer].hitboxBottom)
				if checkResult == true
					CallFunction(Player_CheckHit)
					if checkResult == true
						object.health--
						if object.health == 0
#platform: USE_ORIGINS
							CallNativeFunction2(NotifyCallback, NOTIFY_KILL_BOSS, 0)
							CallNativeFunction2(NotifyCallback, NOTIFY_BOSS_END, true)
#endplatform
							player.score += 1000
							object.animationTimer = 0
							object.animation = GHZEGGANI_DEFEATED
							temp0 = object.entityPos
							temp0 -= 6
							object[-2].state = 1
							object[-3].state = 1
							object[-4].state = 1
							object[-5].state = 1
							ResetObjectEntity(temp0, TypeName[Explosion], 0, object[-6].xpos, object[-6].ypos)
							object[-1].state = WRECKINGBALL_EXPLODE
							object[-1].flameAnim = FLAME_INACTIVE
							object[-1].drawOrder = 3
							object.timer = 0
							object.state = GHZEGGMAN_EXPLODE
						else
							object.animationTimer = 0
							object.animation = GHZEGGANI_HIT
							object[-1].invincibilityTimer = 32
							PlaySfx(SfxName[Boss Hit], false)
						end if
					end if
				end if
			end switch

			// Arena Boundaries
			if object.state < GHZEGGMAN_ESCAPE
				temp0 = player[currentPlayer].collisionRight
				temp0 <<= 16
				temp0 += player[currentPlayer].xpos
				temp1 = stage.curXBoundary2
				temp1 <<= 16
				if temp0 > temp1
					player[currentPlayer].xvel = 0
					player[currentPlayer].speed = 0
					player[currentPlayer].xpos = temp1
					temp0 = player[currentPlayer].collisionRight
					temp0 <<= 16
					player[currentPlayer].xpos -= temp0
				end if
			end if
		end if
	next
end event


event ObjectDraw
	object[-6].drawOrder = 4
	object[-5].drawOrder = 4
	object[-4].drawOrder = 4
	object[-3].drawOrder = 4
	object[-2].drawOrder = 4
	object[-1].drawOrder = 4
	object.drawOrder = 4

	switch object.animation
	default
	case GHZEGGANI_INVISIBLE
		break

	case GHZEGGANI_IDLE
		object.animationTimer++
		object.eggmanFrame++
		if object.eggmanFrame < 3
			object.eggmanFrame = 3
		end if
		if object.eggmanFrame > 11
			object.eggmanFrame = 3
		end if
		DrawSpriteFX(2, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(object.eggmanFrame, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
		break

	case GHZEGGANI_LAUGH
		object.animationTimer++
		object.eggmanFrame++
		if object.eggmanFrame < 12
			object.eggmanFrame = 12
		end if
		if object.eggmanFrame > 108
			object.animation = GHZEGGANI_IDLE
		end if
		if object.eggmanFrame > 107
			if object[0].animation != ANI_DYING
				object.animation = GHZEGGANI_IDLE
			end if
		end if
		DrawSpriteFX(2, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(object.eggmanFrame, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
		break

	case GHZEGGANI_HIT
		object.animationTimer++
		object.eggmanFrame++
		object.mobileAnimTimer++
		object.flameAnim = FLAME_ACTIVE
		if object.mobileAnimTimer > 1
			object.frame++
			object.mobileAnimTimer = 0
		end if
		if object.frame < 0
			object.frame = 0
		end if
		if object.frame > 1
			object.frame = 0
		end if
		if object.eggmanFrame < 109
			object.eggmanFrame = 109
		end if
		if object.eggmanFrame > 139
			object.eggmanFrame = 109
		end if
		DrawSpriteFX(2, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(object.eggmanFrame, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(object.frame, FX_FLIP, object.xpos, object.ypos)
		if object.animationTimer == 30
			object.mobileAnimTimer = 0
			object.animationTimer = 0
			object.animation = GHZEGGANI_IDLE
		end if
		break

	case GHZEGGANI_DEFEATED
		object.animationTimer++
		object.eggmanFrame++
		if object.eggmanFrame < 140
			object.eggmanFrame = 140
		end if
		if object.eggmanFrame > 175
			object.eggmanFrame = 140
		end if
		DrawSpriteFX(2, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(object.eggmanFrame, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
		break

	case GHZEGGANI_TOASTED
		object.animationTimer++
		object.eggmanFrame++
		if object.eggmanFrame < 140
			object.eggmanFrame = 140
		end if
		if object.eggmanFrame > 175
			object.eggmanFrame = 140
		end if
		DrawSpriteFX(2, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(object.eggmanFrame, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
		break

	case GHZEGGANI_PANIC
		object.animationTimer++
		object.eggmanFrame++
		if object.eggmanFrame < 176
			object.eggmanFrame = 176
		end if
		if object.eggmanFrame > 193
			object.eggmanFrame = 176
		end if
		DrawSpriteFX(2, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(object.eggmanFrame, FX_FLIP, object.xpos, object.ypos)
		DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
		break

	end switch

	switch object[-1].flameAnim
	case FLAME_INACTIVE
	default
		break
		
	case FLAME_ACTIVE
		object.flameAnimTimer++
		if object.flameAnimTimer > 1
			object.flameFrame++
			object.flameAnimTimer = 0
		end if
		if object.flameFrame < 194
			object.flameFrame = 194
		end if
		if object.flameFrame > 198
			object.flameFrame = 194
		end if
		DrawSpriteFX(object.flameFrame, FX_FLIP, object.xpos, object.ypos)
		break

	case FLAME_EXPLODE
		object.flameAnimTimer++
		if object.flameAnimTimer > 1
			object.flameFrame++
			object.flameAnimTimer = 0
		end if
		if object.flameFrame < 199
			object.flameFrame = 199
		end if
		if object.flameFrame > 211
			object.flameFrame = 207
		end if
		DrawSpriteFX(object.flameFrame, FX_FLIP, object.xpos, object.ypos)
		break

	end switch
end event


event ObjectStartup
	switch stage.playerListPos
	case PLAYER_SONIC_A
		LoadSpriteSheet("Global/Eggman.gif")
		break

	case PLAYER_TAILS_A
		LoadSpriteSheet("Global/Eggman.gif")
		break

	case PLAYER_KNUCKLES_A
		LoadSpriteSheet("Global/EggRobo.gif")
		break

	case PLAYER_AMY_A
		LoadSpriteSheet("Global/Eggman.gif")
		break

	end switch
	// Empty Egg Mobile
	SpriteFrame(-28, -32, 64, 56, 115, 0) // Frame 0
	SpriteFrame(-28, -32, 64, 56, 180, 0) // Frame 1

	// Egg Mobile Seat
	SpriteFrame(-1, -21, 36, 13, 65, 214) // Frame 2

	// Eggman Idle
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 3
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 4
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 5
	SpriteFrame(-16, -32, 36, 24, 0, 25) // Frame 6
	SpriteFrame(-16, -32, 36, 24, 0, 25) // Frame 7
	SpriteFrame(-16, -32, 36, 24, 0, 25) // Frame 8
	SpriteFrame(-16, -32, 36, 24, 0, 50) // Frame 9
	SpriteFrame(-16, -32, 36, 24, 0, 50) // Frame 10
	SpriteFrame(-16, -32, 36, 24, 0, 50) // Frame 11

	//Eggman Laugh
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 12
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 13

	SpriteFrame(-16, -32, 36, 24, 0, 75) // Frame 14
	SpriteFrame(-16, -32, 36, 24, 0, 75) // Frame 15
	SpriteFrame(-16, -32, 36, 24, 0, 75) // Frame 16
	SpriteFrame(-16, -32, 36, 24, 0, 75) // Frame 17

	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 18
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 19
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 20
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 21

	SpriteFrame(-16, -32, 36, 24, 0, 150) // Frame 22
	SpriteFrame(-16, -32, 36, 24, 0, 150) // Frame 23
	SpriteFrame(-16, -32, 36, 24, 0, 150) // Frame 24
	SpriteFrame(-16, -32, 36, 24, 0, 150) // Frame 25

	SpriteFrame(-16, -32, 36, 24, 0, 125) // Frame 26
	SpriteFrame(-16, -32, 36, 24, 0, 125) // Frame 27
	SpriteFrame(-16, -32, 36, 24, 0, 125) // Frame 28
	SpriteFrame(-16, -32, 36, 24, 0, 125) // Frame 29

	SpriteFrame(-16, -32, 36, 24, 0, 150) // Frame 30
	SpriteFrame(-16, -32, 36, 24, 0, 150) // Frame 31
	SpriteFrame(-16, -32, 36, 24, 0, 150) // Frame 32
	SpriteFrame(-16, -32, 36, 24, 0, 150) // Frame 33

	SpriteFrame(-16, -32, 36, 24, 0, 125) // Frame 34
	SpriteFrame(-16, -32, 36, 24, 0, 125) // Frame 35
	SpriteFrame(-16, -32, 36, 24, 0, 125) // Frame 36
	SpriteFrame(-16, -32, 36, 24, 0, 125) // Frame 37

	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 38
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 39
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 40
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 41
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 42

	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 43
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 44
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 45
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 46
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 47

	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 48
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 49
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 50
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 51
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 52

	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 53
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 54
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 55
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 56
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 57

	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 58
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 59
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 60
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 61
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 62

	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 63
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 64
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 65
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 66
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 67

	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 68
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 69
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 70
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 71
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 72

	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 73
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 74
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 75
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 76
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 77

	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 78
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 79
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 80
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 81
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 82

	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 83
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 84
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 85
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 86
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 87

	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 88
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 89
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 90
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 91
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 92

	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 93
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 94
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 95
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 96
	SpriteFrame(-16, -32, 36, 24, 0, 100) // Frame 97

	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 98
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 99
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 10
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 101
	SpriteFrame(-16, -32, 36, 24, 0, 175) // Frame 102

	SpriteFrame(-16, -32, 36, 24, 0, 75) // Frame 103
	SpriteFrame(-16, -32, 36, 24, 0, 75) // Frame 104
	SpriteFrame(-16, -32, 36, 24, 0, 75) // Frame 105
	SpriteFrame(-16, -32, 36, 24, 0, 75) // Frame 106

	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 107
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 108

	// Eggman Hurt
	SpriteFrame(-20, -32, 40, 24, 37, 0) // Frame 109
	SpriteFrame(-20, -32, 40, 24, 37, 0) // Frame 110

	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 111
	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 112

	SpriteFrame(-20, -32, 40, 24, 37, 50) // Frame 113
	SpriteFrame(-20, -32, 40, 24, 37, 50) // Frame 114

	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 115
	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 116

	SpriteFrame(-20, -32, 40, 24, 37, 75) // Frame 117
	SpriteFrame(-20, -32, 40, 24, 37, 75) // Frame 118

	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 119
	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 120

	SpriteFrame(-20, -32, 40, 24, 37, 100) // Frame 121
	SpriteFrame(-20, -32, 40, 24, 37, 100) // Frame 122

	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 123
	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 124
	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 125

	SpriteFrame(-20, -32, 40, 24, 37, 125) // Frame 126
	SpriteFrame(-20, -32, 40, 24, 37, 125) // Frame 127
	SpriteFrame(-20, -32, 40, 24, 37, 125) // Frame 128

	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 129
	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 130
	SpriteFrame(-20, -32, 40, 24, 37, 25) // Frame 131

	SpriteFrame(-20, -32, 40, 24, 37, 150) // Frame 132
	SpriteFrame(-20, -32, 40, 24, 37, 150) // Frame 133
	SpriteFrame(-20, -32, 40, 24, 37, 150) // Frame 134
	SpriteFrame(-20, -32, 40, 24, 37, 150) // Frame 135
	SpriteFrame(-20, -32, 40, 24, 37, 150) // Frame 136
	SpriteFrame(-20, -32, 40, 24, 37, 150) // Frame 137

	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 138
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 139

	// Eggman Toasted
	SpriteFrame(-16, -32, 36, 24, 41, 175) // Frame 140
	SpriteFrame(-16, -32, 36, 24, 41, 175) // Frame 141
	SpriteFrame(-16, -32, 36, 24, 41, 175) // Frame 142
	SpriteFrame(-16, -32, 36, 24, 41, 175) // Frame 143
	SpriteFrame(-16, -32, 36, 24, 41, 175) // Frame 144
	SpriteFrame(-16, -32, 36, 24, 41, 175) // Frame 145
	SpriteFrame(-16, -32, 36, 24, 78, 175) // Frame 146
	SpriteFrame(-16, -32, 36, 24, 78, 175) // Frame 147
	SpriteFrame(-16, -32, 36, 24, 78, 175) // Frame 148
	SpriteFrame(-16, -32, 36, 24, 78, 175) // Frame 149
	SpriteFrame(-16, -32, 36, 24, 78, 175) // Frame 150
	SpriteFrame(-16, -32, 36, 24, 78, 175) // Frame 151
	SpriteFrame(-16, -32, 36, 24, 78, 0) // Frame 152
	SpriteFrame(-16, -32, 36, 24, 78, 0) // Frame 153
	SpriteFrame(-16, -32, 36, 24, 78, 0) // Frame 154
	SpriteFrame(-16, -32, 36, 24, 78, 0) // Frame 155
	SpriteFrame(-16, -32, 36, 24, 78, 0) // Frame 156
	SpriteFrame(-16, -32, 36, 24, 78, 0) // Frame 157
	SpriteFrame(-16, -32, 36, 24, 78, 25) // Frame 158
	SpriteFrame(-16, -32, 36, 24, 78, 25) // Frame 159
	SpriteFrame(-16, -32, 36, 24, 78, 25) // Frame 160
	SpriteFrame(-16, -32, 36, 24, 78, 25) // Frame 161
	SpriteFrame(-16, -32, 36, 24, 78, 25) // Frame 162
	SpriteFrame(-16, -32, 36, 24, 78, 25) // Frame 163
	SpriteFrame(-16, -32, 36, 24, 78, 50) // Frame 164
	SpriteFrame(-16, -32, 36, 24, 78, 50) // Frame 165
	SpriteFrame(-16, -32, 36, 24, 78, 50) // Frame 166
	SpriteFrame(-16, -32, 36, 24, 78, 50) // Frame 167
	SpriteFrame(-16, -32, 36, 24, 78, 50) // Frame 168
	SpriteFrame(-16, -32, 36, 24, 78, 50) // Frame 169
	SpriteFrame(-16, -32, 36, 24, 78, 75) // Frame 170
	SpriteFrame(-16, -32, 36, 24, 78, 75) // Frame 171
	SpriteFrame(-16, -32, 36, 24, 78, 75) // Frame 172
	SpriteFrame(-16, -32, 36, 24, 78, 75) // Frame 173
	SpriteFrame(-16, -32, 36, 24, 78, 75) // Frame 174
	SpriteFrame(-16, -32, 36, 24, 78, 75) // Frame 175

	// Eggman Sweat
	SpriteFrame(-16, -32, 36, 24, 78, 100) // Frame 176
	SpriteFrame(-16, -32, 36, 24, 78, 100) // Frame 177
	SpriteFrame(-16, -32, 36, 24, 78, 100) // Frame 178
	SpriteFrame(-16, -32, 36, 24, 78, 125) // Frame 179
	SpriteFrame(-16, -32, 36, 24, 78, 125) // Frame 180
	SpriteFrame(-16, -32, 36, 24, 78, 125) // Frame 181
	SpriteFrame(-16, -32, 36, 24, 78, 150) // Frame 182
	SpriteFrame(-16, -32, 36, 24, 78, 150) // Frame 183
	SpriteFrame(-16, -32, 36, 24, 78, 150) // Frame 184
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 185
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 186
	SpriteFrame(-16, -32, 36, 24, 0, 0) // Frame 187
	SpriteFrame(-16, -32, 36, 24, 0, 25) // Frame 188
	SpriteFrame(-16, -32, 36, 24, 0, 25) // Frame 189
	SpriteFrame(-16, -32, 36, 24, 0, 25) // Frame 190
	SpriteFrame(-16, -32, 36, 24, 0, 50) // Frame 191
	SpriteFrame(-16, -32, 36, 24, 0, 50) // Frame 192
	SpriteFrame(-16, -32, 36, 24, 0, 50) // Frame 193

	// Jet
	SpriteFrame(34, 1, 10, 9, 103, 229) // Frame 194
	SpriteFrame(33, 0, 15, 11, 113, 229) // Frame 195
	SpriteFrame(33, 1, 10, 9, 194, 229) // Frame 196
	SpriteFrame(33, 1, 13, 9, 205, 229) // Frame 197
	SpriteFrame(33, 0, 25, 11, 219, 229) // Frame 198

	// Jet Burst
	SpriteFrame(34, -1, 22, 14, 128, 229) // Frame 199
	SpriteFrame(34, -1, 22, 14, 128, 229) // Frame 200
	SpriteFrame(34, -8, 32, 26, 66, 300) // Frame 201
	SpriteFrame(34, -8, 32, 26, 66, 300) // Frame 202
	SpriteFrame(34, -8, 32, 26, 33, 300) // Frame 203
	SpriteFrame(34, -8, 32, 26, 33, 300) // Frame 204
	SpriteFrame(34, -8, 32, 26, 0, 300) // Frame 205
	SpriteFrame(34, -1, 22, 14, 128, 229) // Frame 206
	SpriteFrame(34, 1, 10, 9, 103, 229) // Frame 207
	SpriteFrame(33, 0, 15, 11, 113, 229) // Frame 208
	SpriteFrame(33, 1, 10, 9, 194, 229) // Frame 209
	SpriteFrame(33, 1, 13, 9, 205, 229) // Frame 210
	SpriteFrame(33, 0, 25, 11, 219, 229) // Frame 211
	
	foreach (TypeName[Eggman], arrayPos0, ALL_ENTITIES)
		// Prolly a leftover from this script being much more v3-like, this foreach may have originally been a while loop of all objects
		if object[arrayPos0].type == TypeName[Eggman]
			object[arrayPos0].priority = PRIORITY_XBOUNDS
			
			// Screen Offset
			temp0 = screen.xcenter
			temp0 -= 160 //xcenter if screen width was 320 like OG games
			temp0 -= 8
			
			if temp0 < 0
				temp0 = 0
			end if
			
			if temp0 > 24
				temp0 = 24
			end if
			
			object[arrayPos0].arenaOffset = temp0
			object[arrayPos0].arenaOffset += 32
			object[arrayPos0].arenaOffset *= 0x800
			temp0 <<= 16
			
			// Align the left Boss platform
			arrayPos1 = arrayPos0
			arrayPos1++
			object[arrayPos1].xpos -= temp0
			
			// And then align the right Boss platform
			arrayPos1++
			object[arrayPos1].xpos += temp0
			
			// Still looking at the right Boss platform, make the Boss's base oscillation position be 68 pixels above that
			object[arrayPos0].oscillatePos = object[arrayPos1].ypos
			object[arrayPos0].oscillatePos -= 0x440000
			
			// And then, make the base normal position be 90 pixels above the platform
			object[arrayPos0].originY = object[arrayPos1].ypos
			object[arrayPos0].originY -= 0x5A0000
			
			arrayPos1 = arrayPos0
			arrayPos1--
			object[arrayPos0].arenaBorder = object[arrayPos1].xpos
			object[arrayPos0].arenaBorder += 0x600000
			
			object[arrayPos0].xpos = object[arrayPos0].arenaBorder
			object[arrayPos0].ypos = object[arrayPos0].originY
			object[arrayPos0].ypos -= 0xC00000
		end if
	next
end event


// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
	
	if editor.showGizmos == true
		editor.drawingOverlay = true

		DrawArrow(object.xpos, object.ypos, object[-6].xpos, object[-6].ypos, 255, 255, 0) // Lights
		DrawArrow(object.xpos, object.ypos, object[-5].xpos, object[-5].ypos, 255, 255, 0) // Chain 1
		DrawArrow(object.xpos, object.ypos, object[-4].xpos, object[-4].ypos, 255, 255, 0) // Chain 2
		DrawArrow(object.xpos, object.ypos, object[-3].xpos, object[-3].ypos, 255, 255, 0) // Chain 3
		DrawArrow(object.xpos, object.ypos, object[-2].xpos, object[-2].ypos, 255, 255, 0) // Chain 4
		DrawArrow(object.xpos, object.ypos, object[-1].xpos, object[-1].ypos, 255, 255, 0) // Ball

		DrawArrow(object.xpos, object.ypos, object[+1].xpos, object[+1].ypos, 255, 255, 0) // Platform L
		DrawArrow(object.xpos, object.ypos, object[+2].xpos, object[+2].ypos, 255, 255, 0) // Platform R

		editor.drawingOverlay = false
	end if
end event


event RSDKLoad
	LoadSpriteSheet("Global/Eggman.gif")
	SpriteFrame(-28, -32, 64, 24, 64, 232)
	SpriteFrame(-28, -32, 64, 24, 0, 0)
	SpriteFrame(-28, -32, 64, 56, 128, 174)

	LoadSpriteSheet("Global/EggRobo.gif")
	SpriteFrame(-28, -32, 64, 24, 64, 232)
	SpriteFrame(-28, -32, 64, 24, 0, 0)
	SpriteFrame(-28, -32, 64, 56, 128, 174)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
